// Teste de login com Supabase
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://wfuhtdckdgovfbgnlyie.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndmdWh0ZGNrZGdvdmZiZ25seWllIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgxOTU1MjksImV4cCI6MjA3Mzc3MTUyOX0.3bet4TkkR-A6V4H9b05iulxshV1bfx0i0oVYh_uWbUc';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testLogin() {
  try {
    console.log('üîÑ Testando login com Supabase...');
    
    // Primeiro, vamos verificar se conseguimos criar um usu√°rio de teste
    const testEmail = 'admin@doubletelcom.com.br';
    const testPassword = 'test123456';
    
    console.log('üìù Tentando criar usu√°rio de teste...');
    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
    });
    
    if (signUpError) {
      console.log('‚ö†Ô∏è Erro ao criar usu√°rio (pode j√° existir):', signUpError.message);
    } else {
      console.log('‚úÖ Usu√°rio criado ou j√° existe');
    }
    
    // Agora vamos tentar fazer login
    console.log('üîê Tentando fazer login...');
    const { data: loginData, error: loginError } = await supabase.auth.signInWithPassword({
      email: testEmail,
      password: testPassword,
    });
    
    if (loginError) {
      console.error('‚ùå Erro no login:', loginError.message);
      console.error('‚ùå C√≥digo do erro:', loginError.status);
      return false;
    }
    
    console.log('‚úÖ Login realizado com sucesso!');
    console.log('üë§ Usu√°rio:', loginData.user?.email);
    return true;
    
  } catch (err) {
    console.error('‚ùå Erro geral:', err.message);
    return false;
  }
}

testLogin();